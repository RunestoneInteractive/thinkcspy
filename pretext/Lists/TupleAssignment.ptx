<?xml version="1.0"?>
<section xml:id="lists_tuple-assignment">
  <title>Tuple Assignment</title>
  <p>Python has a very powerful <term>tuple assignment</term> feature that allows a tuple of variables
            on the left of an assignment to be assigned values from a tuple
            on the right of the assignment.</p>
  <program language="python">
    <code>
(name, surname, birth_year, movie, movie_year, profession, birth_place) = julia
</code>
  </program>
  <p>This does the equivalent of seven assignment statements, all on one easy line.
            One requirement is that the number of variables on the left must match the number
            of elements in the tuple.</p>
  <p>Once in a while, it is useful to swap the values of two variables.  With
            conventional assignment statements, we have to use a temporary variable. For
            example, to swap <c>a</c> and <c>b</c>:</p>
  <program language="python">
    <code>
temp = a
a = b
b = temp
</code>
  </program>
  <p>Tuple assignment solves this problem neatly:</p>
  <program language="python">
    <code>
(a, b) = (b, a)
</code>
  </program>
  <p>The left side is a tuple of variables; the right side is a tuple of values.
            Each value is assigned to its respective variable. All the expressions on the
            right side are evaluated before any of the assignments. This feature makes
            tuple assignment quite versatile.</p>
  <p>Naturally, the number of variables on the left and the number of values on the
            right have to be the same.</p>
  <program language="python">
    <code>
&gt;&gt;&gt; (a, b, c, d) = (1, 2, 3)
ValueError: need more than 3 values to unpack
</code>
  </program>
</section>
