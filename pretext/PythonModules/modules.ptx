<?xml version="1.0"?>
<section xml:id="python-modules_modules-and-getting-help">
  <title>Modules and Getting Help</title>
  <video xml:id="vid_modules" youtube="GCLHuPBtLdQ" width="auto"/>
  <p>A <term>module</term> is a file containing Python definitions and statements intended
            for use in other Python programs. There are many Python modules that come with
            Python as part of the <term>standard library</term>. We have already used one of these quite extensively,
            the <c>turtle</c> module.  Recall that once we import the module, we can use things
            that are defined inside.</p>
  <program xml:id="chmod_01" interactive="activecode" language="python">
    <code>
import turtle            # allows us to use the turtles library

wn = turtle.Screen()     # creates a graphics window
alex = turtle.Turtle()   # create a turtle named alex

alex.forward(150)        # tell alex to move forward by 150 units
alex.left(90)            # turn by 90 degrees
alex.forward(75)         # complete the second side of a rectangle
wn.exitonclick()
        </code>
  </program>
  <p>Here we are using <c>Screen</c> and <c>Turtle</c>, both of which are defined inside the turtle module.</p>
  <p>But what if no one had told us about turtle?  How would we know
            that it exists. How would we know what it can do for us? The answer is to ask for help and the best place to get
            help about the Python programming environment is to consult with the Python Documentation.</p>
  <p>The  <url href="http://docs.python.org/py3k/" visual="http://docs.python.org/py3k/">Python Documentation</url> site for Python version 3 (the home page is shown below) is an extremely useful reference
            for all aspects of Python.
            The site contains
            a listing of all the standard modules that are available with Python
            (see <url href="http://docs.python.org/py3k/py-modindex.html" visual="http://docs.python.org/py3k/py-modindex.html">Global Module Index</url>).
            You will also see that there is a <url href="http://docs.python.org/py3k/reference/index.html" visual="http://docs.python.org/py3k/reference/index.html">Language Reference</url>
            and a <url href="http://docs.python.org/py3k/tutorial/index.html" visual="http://docs.python.org/py3k/tutorial/index.html">Tutorial</url> (mostly aimed at people who are already familiar with another programming language), as well as
            installation instructions, how-tos, and frequently asked questions.  We encourage you to become familiar with this site
            and to use it often.</p>
  <image source="PythonModules/Figures/pythondocmedium.png" width="50%"/>
  <p>If you have not done so already, take a look at the Global Module Index.  Here you will see an alphabetical listing of all
            the modules that are available as part of the standard library.  Find the turtle module.</p>
  <image source="PythonModules/Figures/moduleindexmedium.png" width="50%"/>
  <image source="PythonModules/Figures/turtlemodmedium.png" width="50%"/>
  <p>You can see that all the turtle functionality that we have talked about is there.  However, there is so much more.  Take some time to read through and familiarize yourself with some of the other things that turtles can do.</p>
  <note>
    <title>Note: Python modules and limitations with activecode</title>
    <p>Throughout the chapters of this book, activecode windows allow you to practice the Python that you are learning.
                We mentioned in the first chapter that programming is normally done using some type of development
                environment and that the
                activecode used here was strictly to help us learn.  It is not the way we write production programs.</p>
    <p>To that end, it is necessary to mention that many of the  modules available in standard Python
                will <term>not</term> work in the activecode environment.  In fact, only turtle, math, and random have been
                completely ported at this point.  If you wish to explore any
                additional modules, you will need to also explore using a more robust development environment.</p>
  </note>
  <p>
    <term>Check your understanding</term>
  </p>
  <exercise label="question4_1_1">
    <statement>
      <p>In Python a module is:</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>A file containing Python definitions and statements intended for use in other Python programs.</p>
        </statement>
        <feedback><p>
                    A module can be reused in different programs.
                </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>A separate block of code within a program.</p>
        </statement>
        <feedback><p>
                    While a module is separate block of code, it is separate from a program.
                </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>One line of code in a program.</p>
        </statement>
        <feedback><p>
                    The call to a feature within a module may be one line of code, but modules are usually multiple lines of code separate from the program
                </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>A file that contains documentation about functions in Python.</p>
        </statement>
        <feedback><p>
                    Each module has its own documentation, but the module itself is more than just documentation.
                </p></feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="question4_1_2">
    <statement>
      <p>To find out information on the standard modules available with Python you should:</p>
    </statement>
    <choices>
      <choice correct="yes">
        <statement>
          <p>Go to the Python Documentation site.</p>
        </statement>
        <feedback><p>
                    The site contains a listing of all the standard modules that are available with Python.
                </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>Look at the import statements of the program you are working with or writing.</p>
        </statement>
        <feedback><p>
                    The import statements only tell you what modules are currently being used in the program, not how to use them or what they contain.
                </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>Ask the professor</p>
        </statement>
        <feedback><p>
                    While the professor knows a subset of the modules available in Python, chances are the professor will have to look up the available modules just like you would.
                </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>Look in this textbook.</p>
        </statement>
        <feedback><p>
                    This book only explains a portion of the modules available.  For a full listing you should look elsewhere.
                </p></feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="question4_1_3">
    <statement>
      <p>True / False:  All standard Python modules will work in activecode.</p>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>True</p>
        </statement>
        <feedback><p>
                    Only turtle, math, and random have been ported to work in activecode at this time.
                </p></feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>False</p>
        </statement>
        <feedback><p>
                    Only turtle, math, and random have been ported to work in activecode at this time.
                </p></feedback>
      </choice>
    </choices>
  </exercise>
</section>
