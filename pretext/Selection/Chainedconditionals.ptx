<?xml version="1.0"?>
<section xml:id="selection_chained-conditionals">
  <title>Chained conditionals</title>
  <p>Python provides an alternative way to write nested selection such as the one shown in the previous section.
            This is sometimes referred to as a <term>chained
                conditional</term>.</p>
  <program language="python">
    <code>
if x &lt; y:
    print("x is less than y")
elif x &gt; y:
    print("x is greater than y")
else:
    print("x and y must be equal")
</code>
  </program>
  <p>The flow of control can be drawn in a different orientation but the resulting pattern is identical to the one shown above.</p>
  <image source="Selection/Figures/flowchart_chained_conditional.png" width="50%"/>
  <p><c>elif</c> is an abbreviation of <c>else if</c>. Again, exactly one branch will be
            executed. There is no limit of the number of <c>elif</c> statements but only a
            single (and optional) final <c>else</c> statement is allowed and it must be the last
            branch in the statement.</p>
  <p>Each condition is checked in order. If the first is false, the next is checked,
            and so on. If one of them is true, the corresponding branch executes, and the
            statement ends. Even if more than one condition is true, only the first true
            branch executes.</p>
  <p>Here is the same program using <c>elif</c>.</p>
  <program xml:id="sel4" interactive="activecode" language="python">
    <code>
x = 10
y = 10

if x &lt; y:
    print("x is less than y")
elif x &gt; y:
    print("x is greater than y")
else:
    print("x and y must be equal")
        </code>
  </program>
  <note>
    <p>This workspace is provided for your convenience.  You can use this activecode window to try out anything you like.</p>
    <program xml:id="scratch_06_02" interactive="activecode" language="python">
      <code>


        </code>
    </program>
  </note>
  <p>
    <term>Check your understanding</term>
  </p>
  <exercise label="test_question6_7_1">
    <statement>
      <p>Which of I, II, and III below gives the same result as the following nested if?</p>
      <program language="python">
        <code>
# nested if-else statement
x = -10
if x &lt; 0:
    print("The negative number ",  x, " is not valid here.")
else:
    if x &gt; 0:
        print(x, " is a positive number")
    else:
        print(x, " is 0")
</code>
      </program>
      <program language="python">
        <code>
I.

if x &lt; 0:
    print("The negative number ",  x, " is not valid here.")
else x &gt; 0:
    print(x, " is a positive number")
else:
    print(x, " is 0")
</code>
      </program>
      <program language="python">
        <code>
II.

if x &lt; 0:
    print("The negative number ",  x, " is not valid here.")
elif x &gt; 0:
    print(x, " is a positive number")
else:
    print(x, " is 0")
</code>
      </program>
      <program language="python">
        <code>
III.

if x &lt; 0:
    print("The negative number ",  x, " is not valid here.")
if x &gt; 0:
    print(x, " is a positive number")
else:
    print(x, " is 0")
</code>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>I only</p>
        </statement>
        <feedback><p>
                    You can not use a Boolean expression after an else.
                </p></feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>II only</p>
        </statement>
        <feedback><p>
                    Yes, II will give the same result.
                </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>III only</p>
        </statement>
        <feedback><p>
                    No, III will not give the same result.  The first if statement will be true, but the second will be false, so the else part will execute.
                </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>II and III</p>
        </statement>
        <feedback><p>
                    No, Although II is correct III will not give the same result.  Try it.
                </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>I, II, and III</p>
        </statement>
        <feedback><p>
                    No, in I you can not have a Boolean expression after an else.
                </p></feedback>
      </choice>
    </choices>
  </exercise>
  <exercise label="test_question6_7_2">
    <statement>
      <p>What will the following code print if x = 3, y = 5, and z = 2?</p>
      <program language="python">
        <code>
if x &lt; y and x &lt; z:
    print("a")
elif y &lt; x and y &lt; z:
    print("b")
else:
    print("c")
</code>
      </program>
    </statement>
    <choices>
      <choice>
        <statement>
          <p>a</p>
        </statement>
        <feedback><p>
                    While the value in x is less than the value in y (3 is less than 5) it is not less than the value in z (3 is not less than 2).
                </p></feedback>
      </choice>
      <choice>
        <statement>
          <p>b</p>
        </statement>
        <feedback><p>
                    The value in y is not less than the value in x (5 is not less than 3).
                </p></feedback>
      </choice>
      <choice correct="yes">
        <statement>
          <p>c</p>
        </statement>
        <feedback><p>
                    Since the first two Boolean expressions are false the else will be executed.
                </p></feedback>
      </choice>
    </choices>
  </exercise>
</section>
