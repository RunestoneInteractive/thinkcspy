<?xml version="1.0"?>
<exercises xml:id="classes-digging-deeper_exercises">
  <title>Exercises</title>
  <exercise label="classes_deeper_q1">
    <statement>
      <p>We can represent a rectangle by knowing three things: the location of its lower left corner, its width, and its height.
                        Create a class definition for a Rectangle class using this idea.  To create a Rectangle object at location (4,5) with width 6
                        and height 5, we would do the following:</p>
      <pre>r = Rectangle(Point(4, 5), 6, 5)</pre>
    </statement>
    <program interactive="activecode" language="python" xml:id="classes_deeper_q1_editor">
      <code>

        </code>
    </program>
    <solution>
      <program xml:id="ch_cl2_answer1" language="python">
        <code>
class Point:
    """ Point class for representing and manipulating x,y coordinates. """

    def __init__(self, initX, initY):

        self.x = initX
        self.y = initY

    def getX(self):
        return self.x

    def getY(self):
        return self.y

    def __str__(self):
        return "x=" + str(self.x) + ", y=" + str(self.y)


class Rectangle:
    """Rectangle class using Point, width and height"""

    def __init__(self, initP, initW, initH):

        self.location = initP
        self.width = initW
        self.height = initH

loc = Point(4, 5)
r = Rectangle(loc, 6, 5)
print(r)
        </code>
      </program>
    </solution>
  </exercise>
  <exercise label="ch_cl2_q2">
    <statement>
      <p>Add the following accessor methods to the Rectangle class: <c>getWidth</c>, <c>getHeight</c>, <c>__str__</c>.</p>
    </statement>
    <program xml:id="ch_cl2_q2_editor" interactive="activecode" language="python">
      <code>

        </code>
    </program>
  </exercise>
  <exercise label="ch_cl2_q3">
    <statement>
      <p>Add a method <c>area</c> to the Rectangle class that returns the area of any instance:</p>
      <pre>r = Rectangle(Point(0, 0), 10, 5)
test(r.area(), 50)</pre>
    </statement>
    <program interactive="activecode" language="python" xml:id="ch_cl2_q3_editor">
      <code>

        </code>
    </program>
    <solution>
      <program xml:id="ch_cl2_q3answer" language="python">
        <code>
class Point:
    """ Point class for representing and manipulating x,y coordinates. """

    def __init__(self, initX, initY):

        self.x = initX
        self.y = initY

    def getX(self):
        return self.x

    def getY(self):
        return self.y

    def __str__(self):
        return "x=" + str(self.x) + ", y=" + str(self.y)


class Rectangle:
    """Rectangle class using Point, width and height"""

    def __init__(self, initP, initW, initH):

        self.location = initP
        self.width = initW
        self.height = initH

    def area(self):
        return self.width * self.height
        </code>
      </program>
    </solution>
  </exercise>
  <exercise label="ch_cl2_q4">
    <statement>
      <p>Write a <c>perimeter</c> method in the Rectangle class so that we can find
                the perimeter of any rectangle instance:</p>
      <pre>r = Rectangle(Point(0, 0), 10, 5)
test(r.perimeter(), 30)</pre>
    </statement>
    <program xml:id="ch_cl2_q4_editor" interactive="activecode" language="python">
      <code>

        </code>
    </program>
  </exercise>
  <exercise label="ch_cl2_q5">
    <statement>
      <p>Write a <c>transpose</c> method in the Rectangle class that swaps the width
                        and the height of any rectangle instance:</p>
      <pre>r = Rectangle(Point(100, 50), 10, 5)
test(r.width, 10)
test(r.height, 5)
r.transpose()
test(r.width, 5)
test(r.height, 10)</pre>
    </statement>
    <program interactive="activecode" language="python" xml:id="ch_cl2_q5_editor">
      <code>

        </code>
    </program>
    <solution>
      <program xml:id="ch_cl2_q5answer" language="python">
        <code>
class Point:
    """ Point class for representing and manipulating x,y coordinates. """

    def __init__(self, initX, initY):

        self.x = initX
        self.y = initY

    def getX(self):
        return self.x

    def getY(self):
        return self.y

    def __str__(self):
        return "x=" + str(self.x) + ", y=" + str(self.y)


class Rectangle:
    """Rectangle class using Point, width and height"""

    def __init__(self, initP, initW, initH):

        self.location = initP
        self.width = initW
        self.height = initH

    def transpose(self):
        temp = self.width
        self.width = self.height
        self.height = temp
        </code>
      </program>
    </solution>
  </exercise>
  <exercise label="ch_cl2_q6">
    <statement>
      <p>Write a new method in the Rectangle class to test if a Point falls within
                the rectangle.  For this exercise, assume that a rectangle at (0,0) with
                width 10 and height 5 has <em>open</em> upper bounds on the width and height,
                i.e. it stretches in the x direction from [0 to 10), where 0 is included
                but 10 is excluded, and from [0 to 5) in the y direction.  So
                it does not contain the point (10, 2).  These tests should pass:</p>
      <pre>r = Rectangle(Point(0, 0), 10, 5)
test(r.contains(Point(0, 0)), True)
test(r.contains(Point(3, 3)), True)
test(r.contains(Point(3, 7)), False)
test(r.contains(Point(3, 5)), False)
test(r.contains(Point(3, 4.99999)), True)
test(r.contains(Point(-3, -3)), False)</pre>
    </statement>
    <program xml:id="ch_cl2_q6_editor" interactive="activecode" language="python">
      <code>

        </code>
    </program>
  </exercise>
  <exercise label="ch_cl2_q7">
    <statement>
      <p>Write a new method called <c>diagonal</c> that will return the length of the diagonal that runs
                        from the lower left corner to the opposite corner.</p>
    </statement>
    <program interactive="activecode" language="python" xml:id="ch_cl2_q7_editor">
      <code>

        </code>
    </program>
    <solution>
      <program xml:id="ch_cl2_answer7" language="python">
        <code>
class Point:
    """ Point class for representing and manipulating x,y coordinates. """

    def __init__(self, initX, initY):

        self.x = initX
        self.y = initY

    def getX(self):
        return self.x

    def getY(self):
        return self.y

    def __str__(self):
        return "x=" + str(self.x) + ", y=" + str(self.y)


class Rectangle:
    """Rectangle class using Point, width and height"""

    def __init__(self, initP, initW, initH):

        self.location = initP
        self.width = initW
        self.height = initH

    def diagonal(self):

        d = (self.width**2 + self.height**2) ** 0.5
        return d
        </code>
      </program>
    </solution>
  </exercise>
  <exercise label="ch_cl2_q8">
    <statement>
      <p>In games, we often put a rectangular <q>bounding box</q> around our sprites in
                the game.  We can then do <em>collision detection</em> between, say, bombs and
                spaceships, by comparing whether their rectangles overlap anywhere.</p>
      <p>Write a function to determine whether two rectangles collide. <em>Hint:
                    this might be quite a tough exercise!  Think carefully about all the
                    cases before you code.</em></p>
    </statement>
    <program xml:id="ch_cl2_q8_editor" interactive="activecode" language="python">
      <code>

        </code>
    </program>
  </exercise>
</exercises>
